const { ipcRenderer } = require('electron');
const fs = require('fs');
const path = require('path');

let config = {};

// –û–±—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const DEFAULT_CONFIG = {
  folders: [
    {
      label: "Finder",
      path: "/"
    }
  ],
  sites: [
    {
      label: "Google",
      url: "https://google.com",
      type: "site"
    }
  ],
  trayEmoji: "üòä",
  trayText: "", // –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç—Ä–µ–µ
  useExternalBrowser: true, // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä
  allowIconChange: true, // –í–∫–ª—é—á–∞–µ–º –∑–∞–º–µ–Ω—É –∏–∫–æ–Ω–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  showClock: false,
  use24HourFormat: true, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º 24-—á–∞—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç
  showAmPm: true, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º AM/PM –≤ 12-—á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
  showBattery: false,
  firstRun: true,
  autoStart: false
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
document.addEventListener('DOMContentLoaded', () => {
  loadConfig();
  setupEventListeners();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
  ipcRenderer.send('get-autostart-status');
});

function setupEventListeners() {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–º–∞–π–ª–∏–∫–∞
  document.addEventListener('click', (e) => {
    if (e.target.classList.contains('emoji-item')) {
      selectEmoji(e.target.textContent);
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ —É–¥–∞–ª–µ–Ω - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–∫–∏ –≤ —Ç—Ä–µ–µ
  document.getElementById('allowIconChange').addEventListener('change', (e) => {
    config.allowIconChange = e.target.checked;
    updateIconChangeState(e.target.checked);
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ —á–∞—Å–æ–≤ –≤ —Ç—Ä–µ–µ
  document.getElementById('showClock').addEventListener('change', (e) => {
    config.showClock = e.target.checked;
    updateTimeFormatState(e.target.checked);
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —É–¥–∞–ª–µ–Ω - —Ñ–æ—Ä–º–∞—Ç —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ selectTimeFormat()

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ AM/PM
  document.getElementById('showAmPm').addEventListener('change', (e) => {
    config.showAmPm = e.target.checked;
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ –∑–∞—Ä—è–¥–∞ –±–∞—Ç–∞—Ä–µ–∏ –≤ —Ç—Ä–µ–µ
  document.getElementById('showBattery').addEventListener('change', (e) => {
    config.showBattery = e.target.checked;
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—É–º–±–ª–µ—Ä–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
  document.getElementById('autoStart').addEventListener('change', (e) => {
    const enable = e.target.checked;
    ipcRenderer.send('toggle-autostart', enable);
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
  ipcRenderer.on('autostart-status', (event, enabled) => {
    config.autoStart = enabled;
    document.getElementById('autoStart').checked = enabled;
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  ipcRenderer.on('reset-confirm-result', (event, confirmed) => {
    if (confirmed) {
      config = { ...DEFAULT_CONFIG };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–±—Ä–æ—à–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      ipcRenderer.send('save-config', config);
      
      populateForm();
      renderFolders();
      renderSites();
      showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
  ipcRenderer.on('folder-selected', (event, { inputId, path }) => {
    document.getElementById(inputId).value = path;
  });
  
  ipcRenderer.on('application-selected', (event, { inputId, path }) => {
    document.getElementById(inputId).value = path;
  });
  
  ipcRenderer.on('file-selected', (event, { inputId, path }) => {
    document.getElementById(inputId).value = path;
  });
  
  ipcRenderer.on('app-for-site-selected', (event, { index, path }) => {
    config.sites[index].url = path;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ
    if (config.sites[index].label === '–ù–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ') {
      const appName = path.split('/').pop().replace('.app', '');
      config.sites[index].label = appName;
    }
    
    renderSites();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  });
  
  ipcRenderer.on('folder-for-item-selected', (event, { index, path }) => {
    config.folders[index].path = path;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ
    if (!config.folders[index].label || config.folders[index].label.trim() === '') {
      const folderName = path.split('/').pop(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∏–∑ –ø—É—Ç–∏
      config.folders[index].label = folderName;
    }
    
    renderFolders();
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    ipcRenderer.send('config-updated', config);
  });
  
  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏ –ø–æ–ø–∞–ø–∞ —Å–º–∞–π–ª–∏–∫–æ–≤
  document.addEventListener('click', function(event) {
    if (!event.target.classList.contains('help-icon')) {
      const allTooltips = document.querySelectorAll('.help-tooltip');
      allTooltips.forEach(tooltip => tooltip.classList.remove('show'));
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —Å–º–∞–π–ª–∏–∫–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    const emojiPopup = document.getElementById('emojiPopup');
    if (emojiPopup && !emojiPopup.classList.contains('hidden')) {
      const popupContent = emojiPopup.querySelector('.emoji-popup-content');
      if (!popupContent.contains(event.target) && !event.target.closest('.icon-selector-row')) {
        closeEmojiPopup();
      }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
    const textInput = document.getElementById('trayText');
    const saveBtn = document.getElementById('save-text-btn');
    if (textInput && saveBtn && saveBtn.style.display !== 'none') {
      if (!textInput.contains(event.target) && !saveBtn.contains(event.target)) {
        saveTrayText();
      }
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ - –ø—Ä–æ—Å—Ç–∞—è
function showTab(tabName, event) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
  const tabContents = document.querySelectorAll('.tab-content');
  tabContents.forEach(tab => tab.classList.remove('active'));
  
  // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
  const tabBtns = document.querySelectorAll('.tab-btn');
  tabBtns.forEach(btn => btn.classList.remove('active'));
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
  document.getElementById(tabName + '-tab').classList.add('active');
  
  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
  if (event) {
    event.target.classList.add('active');
  }
  
  // –ï—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É, –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
  if (tabName === 'main') {
    renderFolders();
    renderSites();
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤, –ø–∞–ø–æ–∫ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
function selectFolder(inputId) {
  const { ipcRenderer } = require('electron');
  ipcRenderer.send('select-folder', inputId);
}

function selectApplication(inputId) {
  const { ipcRenderer } = require('electron');
  ipcRenderer.send('select-application', inputId);
}

function selectFile(inputId, extension) {
  const { ipcRenderer } = require('electron');
  ipcRenderer.send('select-file', { inputId, extension });
}

function selectAppForSite(index) {
  const { ipcRenderer } = require('electron');
  ipcRenderer.send('select-app-for-site', index);
}

function loadConfig() {
  try {
    const configPath = path.join(__dirname, 'config.json');
    if (fs.existsSync(configPath)) {
      config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
    } else {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      config = { ...DEFAULT_CONFIG };
    }
    
    populateForm();
    renderFolders();
    renderSites();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    showTab('main');
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Ç–∞–±–∞ –ø–æ–¥—Å–≤–µ—á–µ–Ω–∞
    const mainTabBtn = document.querySelector('.tab-btn[onclick*="main"]');
    if (mainTabBtn) {
      mainTabBtn.classList.add('active');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–∫–∏
    updateIconChangeState(config.allowIconChange || false);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
    alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
  }
}

function populateForm() {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–º–∞–π–ª–∏–∫
  const currentEmoji = config.trayEmoji || 'üòä';
  const currentEmojiElement = document.getElementById('currentEmoji');
  if (currentEmojiElement) {
    if (currentEmoji === '‚úï') {
      currentEmojiElement.textContent = '‚úï';
      currentEmojiElement.style.fontSize = '16px';
      currentEmojiElement.style.fontWeight = 'bold';
    } else {
      currentEmojiElement.textContent = currentEmoji;
      currentEmojiElement.style.fontSize = '20px';
      currentEmojiElement.style.fontWeight = 'normal';
    }
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Ç—Ä–µ—è
  const trayTextInput = document.getElementById('trayText');
  if (trayTextInput) {
    trayTextInput.value = config.trayText || '';
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  const editBtn = document.getElementById('edit-text-btn');
  const saveBtn = document.getElementById('save-text-btn');
  if (editBtn && saveBtn) {
    editBtn.style.display = 'inline-flex';
    saveBtn.style.display = 'none';
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–∫–∏
  const allowIconChangeToggle = document.getElementById('allowIconChange');
  if (allowIconChangeToggle) {
    allowIconChangeToggle.checked = config.allowIconChange || false;
    updateIconChangeState(config.allowIconChange || false);
  } else {
    // –ï—Å–ª–∏ —Ç—É–º–±–ª–µ—Ä –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    updateIconChangeState(config.allowIconChange || false);
  }
  
  // –ï—Å–ª–∏ —Ç—É–º–±–ª–µ—Ä –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–º–∞–π–ª–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  if (!(config.allowIconChange || false)) {
    config.trayEmoji = 'üòä';
    const currentEmojiElement = document.getElementById('currentEmoji');
    if (currentEmojiElement) {
      currentEmojiElement.textContent = 'üòä';
    }
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ —á–∞—Å–æ–≤
  const showClockToggle = document.getElementById('showClock');
  if (showClockToggle) {
    showClockToggle.checked = config.showClock || false;
    updateTimeFormatState(config.showClock || false);
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —á–µ—Ä–µ–∑ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  updateTimeFormatSelection(config.use24HourFormat !== false);
  updateAmPmToggleState(config.use24HourFormat === false);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ AM/PM
  const showAmPmToggle = document.getElementById('showAmPm');
  if (showAmPmToggle) {
    showAmPmToggle.checked = config.showAmPm !== false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é true
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ –ø–æ–∫–∞–∑–∞ –∑–∞—Ä—è–¥–∞ –±–∞—Ç–∞—Ä–µ–∏
  const showBatteryToggle = document.getElementById('showBattery');
  if (showBatteryToggle) {
    showBatteryToggle.checked = config.showBattery || false;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
  const autoStartToggle = document.getElementById('autoStart');
  if (autoStartToggle) {
    autoStartToggle.checked = config.autoStart || false;
  }
}

function loadEmojiGrid() {
  const emojiGrid = document.getElementById('emojiGrid');
  emojiGrid.innerHTML = '';
  
  // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫—Ä–µ—Å—Ç–∏–∫ –¥–ª—è "—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"
  const crossItem = document.createElement('div');
  crossItem.className = 'emoji-item';
  crossItem.textContent = '‚úï';
  crossItem.title = '–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç (–±–µ–∑ —Å–º–∞–π–ª–∏–∫–∞)';
  emojiGrid.appendChild(crossItem);
  
  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–º–∞–π–ª–∏–∫–∏ –¥–ª—è —Ç—Ä–µ—è
  const emojis = [
    'üòä', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'üòÇ', 'ü§£',
    'üòá', 'üôÇ', 'üôÉ', 'üòâ', 'üòå', 'üòç', 'ü•∞', 'üòò',
    'üòó', 'üòô', 'üòö', 'üòã', 'üòõ', 'üòù', 'üòú', 'ü§™',
    'ü§®', 'üßê', 'ü§ì', 'üòé', 'ü§©', 'ü•≥', 'üòè', 'üòí',
    'üòû', 'üòî', 'üòü', 'üòï', 'üôÅ', '‚òπÔ∏è', 'üò£', 'üòñ',
    'üò´', 'üò©', 'ü•∫', 'üò¢', 'üò≠', 'üò§', 'üò†', 'üò°',
    'ü§¨', 'ü§Ø', 'üò≥', 'ü•µ', 'ü•∂', 'üò±', 'üò®', 'üò∞',
    'üò•', 'üòì', 'ü§ó', 'ü§î', 'ü§≠', 'ü§´', 'ü§•', 'üò∂',
    'üòê', 'üòë', 'üò¨', 'üôÑ', 'üòØ', 'üò¶', 'üòß', 'üòÆ',
    'üò≤', 'ü•±', 'üò¥', 'ü§§', 'üò™', 'üòµ', 'ü§ê', 'ü•¥',
    'ü§¢', 'ü§Æ', 'ü§ß', 'üò∑', 'ü§í', 'ü§ï', 'ü§ë', 'ü§†',
    'üí©', 'üëª', 'üíÄ', '‚ò†Ô∏è', 'üëΩ', 'üëæ', 'ü§ñ', 'üéÉ',
    'üò∫', 'üò∏', 'üòπ', 'üòª', 'üòº', 'üòΩ', 'üôÄ', 'üòø',
    'üòæ', 'üë∂', 'üßí', 'üë¶', 'üëß', 'üßë', 'üë®', 'üë©',
    'üßì', 'üë¥', 'üëµ', 'üë±', 'üë±‚Äç‚ôÄÔ∏è', 'üë±‚Äç‚ôÇÔ∏è', 'üßî', 'üë®‚Äçü¶∞',
    'üë©‚Äçü¶∞', 'üë®‚Äçü¶±', 'üë©‚Äçü¶±', 'üë®‚Äçü¶≥', 'üë©‚Äçü¶≥', 'üë®‚Äçü¶≤', 'üë©‚Äçü¶≤', 'ü§µ',
    'üë∞', 'ü§∞', 'ü§±', 'üëº', 'üéÖ', 'ü§∂', 'ü¶∏', 'ü¶π',
    'üßô', 'üßö', 'üßõ', 'üßú', 'üßù', 'üßû', 'üßü', 'üíÜ',
    'üíá', 'üö∂', 'üèÉ', 'üíÉ', 'üï∫', 'üëØ', 'üßò', 'üõÄ',
    'üõå', 'üë≠', 'üë´', 'üë¨', 'üíè', 'üíë', 'üë™', 'üó£Ô∏è',
    'üë§', 'üë•', 'üë£', 'üêµ', 'üêí', 'ü¶ç', 'üê∂', 'üêï',
    'üê©', 'üê∫', 'ü¶ä', 'üê±', 'üêà', 'ü¶Å', 'üêØ', 'üêÖ',
    'üêÜ', 'üê¥', 'üêé', 'ü¶Ñ', 'ü¶ì', 'ü¶å', 'üêÆ', 'üêÇ',
    'üêÉ', 'üêÑ', 'üê∑', 'üêñ', 'üêó', 'üêΩ', 'üêè', 'üêë',
    'üêê', 'üê™', 'üê´', 'ü¶ô', 'ü¶í', 'üêò', 'ü¶è', 'ü¶õ',
    'üê≠', 'üêÅ', 'üêÄ', 'üêπ', 'üê∞', 'üêá', 'üêøÔ∏è', 'ü¶î',
    'ü¶á', 'üêª', 'üê®', 'üêº', 'ü¶ò', 'ü¶°', 'üêæ', 'ü¶É',
    'üêî', 'üêì', 'üê£', 'üê§', 'üê•', 'üê¶', 'üêß', 'üïäÔ∏è',
    'ü¶Ö', 'ü¶Ü', 'ü¶â', 'ü¶á', 'üê∫', 'üêó', 'üê¥', 'ü¶Ñ',
    'üêù', 'üêõ', 'ü¶ã', 'üêå', 'üêû', 'üêú', 'ü¶ü', 'ü¶ó',
    'üï∑Ô∏è', 'üï∏Ô∏è', 'ü¶Ç', 'üê¢', 'üêç', 'ü¶é', 'ü¶ñ', 'ü¶ï',
    'üêô', 'ü¶ë', 'ü¶ê', 'ü¶û', 'ü¶Ä', 'üê°', 'üê†', 'üêü',
    'üê¨', 'üê≥', 'üêã', 'ü¶à', 'üêä', 'üêÖ', 'üêÜ', 'ü¶ì',
    'ü¶ç', 'üêò', 'ü¶è', 'ü¶õ', 'üê™', 'üê´', 'ü¶ô', 'ü¶í',
    'üêÉ', 'üêÇ', 'üêÑ', 'üêé', 'üêñ', 'üêè', 'üêë', 'ü¶ô',
    'üêê', 'ü¶å', 'üêï', 'üê©', 'ü¶Æ', 'üêï‚Äçü¶∫', 'üêà', 'üêì',
    'ü¶É', 'ü¶ö', 'ü¶ú', 'ü¶¢', 'ü¶©', 'üïäÔ∏è', 'üêá', 'ü¶ù',
    'ü¶®', 'ü¶°', 'ü¶¶', 'ü¶•', 'üêÅ', 'üêÄ', 'üêøÔ∏è', 'ü¶î'
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–µ—Ç–∫—É
  emojis.forEach(emoji => {
    const emojiItem = document.createElement('div');
    emojiItem.className = 'emoji-item';
    emojiItem.textContent = emoji;
    emojiItem.title = emoji;
    emojiGrid.appendChild(emojiItem);
  });
}

function selectEmoji(emoji) {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  config.trayEmoji = emoji;
  
  if (emoji === '‚úï') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –≤ —Ç—Ä–µ–µ
    const hasText = config.trayText && config.trayText.trim() !== '';
    
    if (!hasText) {
      // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –æ—Ç–∫–ª—é—á–∞–µ–º –∑–∞–º–µ–Ω—É –∏–∫–æ–Ω–∫–∏
      config.allowIconChange = false;
      document.getElementById('allowIconChange').checked = false;
      updateIconChangeState(false);
    } else {
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç—É–º–±–ª–µ—Ä –≤–∫–ª—é—á–µ–Ω–Ω—ã–º, –Ω–æ –Ω–µ –º–µ–Ω—è–µ–º –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º —Ä–µ—à–∞–µ—Ç, –≤–∫–ª—é—á–∞—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∞—Ç—å —Ç—É–º–±–ª–µ—Ä
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–µ—Å—Ç–∏–∫
    const currentEmojiElement = document.getElementById('currentEmoji');
    if (currentEmojiElement) {
      currentEmojiElement.textContent = '‚úï';
      currentEmojiElement.style.fontSize = '16px';
      currentEmojiElement.style.fontWeight = 'bold';
    }
  } else {
    // –û–±—ã—á–Ω—ã–π —Å–º–∞–π–ª–∏–∫ –≤–∫–ª—é—á–∞–µ—Ç –∑–∞–º–µ–Ω—É –∏–∫–æ–Ω–∫–∏
    config.allowIconChange = true;
    document.getElementById('allowIconChange').checked = true;
    updateIconChangeState(true);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
    const currentEmojiElement = document.getElementById('currentEmoji');
    if (currentEmojiElement) {
      currentEmojiElement.textContent = emoji;
      currentEmojiElement.style.fontSize = '20px';
      currentEmojiElement.style.fontWeight = 'normal';
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤ —Å–µ—Ç–∫–µ
  updateEmojiSelection(emoji);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
  closeEmojiPopup();
  
  // –°–æ–∑–¥–∞–µ–º PNG –∏–∫–æ–Ω–∫—É –∏–∑ —Å–º–∞–π–ª–∏–∫–∞
  createEmojiIconPNG(emoji);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  ipcRenderer.send('config-updated', config);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–º–∞–π–ª–∏–∫–æ–≤
  if (emoji !== '‚úï') {
    const message = `–°–º–∞–π–ª–∏–∫ ${emoji} –≤—ã–±—Ä–∞–Ω –¥–ª—è —Ç—Ä–µ—è`;
    showNotification(message);
  }
}

function createEmojiIconPNG(emoji) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ç—Ä–µ—è
  const trayText = config.trayText || '';
  
  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫—Ä–µ—Å—Ç–∏–∫ (—Ä–µ–∂–∏–º "—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"), –Ω–µ —Å–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É
  if (emoji === '‚úï') {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É
    ipcRenderer.send('emoji-icon-created', { emoji: '‚úï', dataURL: null, trayText });
    return;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ç—Ä–µ—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const traySize = getTrayIconSize();
  
  // –°–æ–∑–¥–∞–µ–º canvas –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è 64x64 –¥–ª—è —á–µ—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const canvas = document.createElement('canvas');
  canvas.width = 64;
  canvas.height = 64;
  const ctx = canvas.getContext('2d');
  
  // –í–∫–ª—é—á–∞–µ–º —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
  ctx.imageSmoothingEnabled = true;
  ctx.imageSmoothingQuality = 'high';
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ç–∫–∏–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞
  ctx.textRenderingOptimization = 'optimizeQuality';
  
  // –ù–µ –∑–∞–ª–∏–≤–∞–µ–º —Ñ–æ–Ω - –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º
  // ctx.fillStyle = 'white';
  // ctx.fillRect(0, 0, 64, 64);
  
  // –û–±—ã—á–Ω—ã–π —Å–º–∞–π–ª–∏–∫
  ctx.font = 'bold 48px Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif';
  ctx.textAlign = 'center';
  ctx.textBaseline = 'middle';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é —Ç–µ–Ω—å –¥–ª—è —á–µ—Ç–∫–æ—Å—Ç–∏
  ctx.shadowColor = 'rgba(0, 0, 0, 0.1)';
  ctx.shadowBlur = 1;
  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 1;
  
  // –†–∏—Å—É–µ–º —Å–º–∞–π–ª–∏–∫ —Å—Ç—Ä–æ–≥–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ —Å —Å–º–µ—â–µ–Ω–∏–µ–º –≤–Ω–∏–∑ –¥–ª—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
  ctx.fillText(emoji, 32, 38);
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º canvas –≤ PNG data URL
  const dataURL = canvas.toDataURL('image/png');
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ PNG –¥–∞–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
  ipcRenderer.send('emoji-icon-created', { emoji, dataURL, trayText });
}

// –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç—Ä–µ—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
function getTrayIconSize() {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —á–µ—Ä–µ–∑ Electron
  const { remote } = require('electron');
  const platform = remote ? remote.process.platform : 'darwin'; // fallback –¥–ª—è macOS
  
  if (platform === 'darwin') {
    return 22; // macOS —Ç—Ä–µ–π –æ–±—ã—á–Ω–æ 22x22
  } else if (platform === 'win32') {
    return 16; // Windows —Ç—Ä–µ–π –æ–±—ã—á–Ω–æ 16x16
  } else {
    return 24; // Linux —Ç—Ä–µ–π –æ–±—ã—á–Ω–æ 24x24
  }
}

function updateEmojiSelection(selectedEmoji) {
  const emojiItems = document.querySelectorAll('.emoji-item');
  emojiItems.forEach(item => {
    if (item.textContent === selectedEmoji) {
      item.classList.add('selected');
    } else {
      item.classList.remove('selected');
    }
  });
}

function toggleEmojiPopup() {
  const emojiPopup = document.getElementById('emojiPopup');
  const emojiGrid = document.getElementById('emojiGrid');
  
  if (emojiPopup.classList.contains('hidden')) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–º–∞–π–ª–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if (emojiGrid.children.length === 0) {
      loadEmojiGrid();
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
      const currentEmojiElement = document.getElementById('currentEmoji');
      if (currentEmojiElement) {
        const currentEmoji = currentEmojiElement.textContent;
        updateEmojiSelection(currentEmoji);
      }
    }
    emojiPopup.classList.remove('hidden');
    emojiPopup.classList.add('show');
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
    closeEmojiPopup();
  }
}

function closeEmojiPopup() {
  const emojiPopup = document.getElementById('emojiPopup');
  emojiPopup.classList.remove('show');
  setTimeout(() => {
    emojiPopup.classList.add('hidden');
  }, 300); // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
}

function renderSites() {
  const container = document.getElementById('sitesContainer');
  container.innerHTML = '';
  
  config.sites.forEach((site, index) => {
    const siteElement = createSiteElement(site, index);
    container.appendChild(siteElement);
  });
}

function renderFolders() {
  const container = document.getElementById('foldersContainer');
  container.innerHTML = '';
  
  config.folders.forEach((folder, index) => {
    const folderElement = createFolderElement(folder, index);
    container.appendChild(folderElement);
  });
}

function createFolderElement(folder, index) {
  const div = document.createElement('div');
  div.className = 'folder-item';
  
  const hasPath = folder.path && folder.path.trim() !== '';
  const buttonClass = hasPath ? 'folder-open-btn' : 'folder-select-btn';
  const buttonAction = `selectFolderForItem(${index})`;
  const buttonTitle = hasPath ? `–ò–∑–º–µ–Ω–∏—Ç—å –ø—É—Ç—å: ${folder.path}` : '–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É';
  
  div.innerHTML = `
    <div class="folder-row">
      <div class="folder-left">
        <button class="btn btn-icon ${buttonClass}" onclick="${buttonAction}" title="${buttonTitle}">
          üìÅ
        </button>
        <div class="folder-name-container" id="folder-name-${index}" style="display: ${hasPath ? 'block' : 'none'};">
          <input type="text" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏" value="${folder.label}" 
                 onchange="updateFolderLabel(${index}, this.value)" class="folder-name-input">
        </div>
        <span class="folder-hint" id="folder-hint-${index}" style="display: ${!hasPath ? 'inline' : 'none'};">
          ‚Üê –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞–ø–∫—É —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å
        </span>
      </div>
      <div class="folder-right">
        <button class="btn btn-icon btn-edit" onclick="editFolderName(${index})" title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ" style="display: ${hasPath ? 'inline-flex' : 'none'};">
          ‚úèÔ∏è
        </button>
        <button class="btn btn-icon btn-remove" onclick="removeFolder(${index})" title="–£–¥–∞–ª–∏—Ç—å">
          ‚úï
        </button>
      </div>
    </div>
  `;
  return div;
}

function addFolder() {
  config.folders.push({
    label: '',
    path: ''
  });
  renderFolders();
  
  // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  setTimeout(() => {
    const newFolder = document.querySelector('#foldersContainer .folder-item:last-child');
    if (newFolder) {
      newFolder.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }, 100);
  
  // –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –ø–æ–∫–∞ –ø—É—Ç—å –Ω–µ –≤—ã–±—Ä–∞–Ω
}

function removeFolder(index) {
  config.folders.splice(index, 1);
  renderFolders();
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  ipcRenderer.send('config-updated', config);
}

function updateFolderLabel(index, label) {
  config.folders[index].label = label;
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—É—Ç—å –Ω–µ –ø—É—Å—Ç–æ–π
  if (config.folders[index].path && config.folders[index].path.trim() !== '') {
    ipcRenderer.send('config-updated', config);
  }
}

function selectFolderForItem(index) {
  const { ipcRenderer } = require('electron');
  ipcRenderer.send('select-folder-for-item', index);
}

function editFolderName(index) {
  const input = document.querySelector(`#foldersContainer .folder-item:nth-child(${index + 1}) .folder-name-input`);
  if (input) {
    input.focus();
    input.select();
  }
}

function editSiteName(index) {
  const input = document.querySelector(`#sitesContainer .site-item:nth-child(${index + 1}) .site-name-input`);
  if (input) {
    input.focus();
    input.select();
  }
}

function toggleSiteUrlField(index) {
  const site = config.sites[index];
  const isApp = site.type === 'app';
  
  if (isApp) {
    // –î–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞
    selectAppForSite(index);
    return;
  }
  
  // –î–ª—è —Å–∞–π—Ç–æ–≤ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª–µ–π
  const urlContainer = document.getElementById(`site-url-${index}`);
  const nameContainer = document.getElementById(`site-name-${index}`);
  const actionsNormal = document.getElementById(`site-actions-normal-${index}`);
  const actionsSave = document.getElementById(`site-actions-save-${index}`);
  const siteHint = document.getElementById(`site-hint-${index}`);
  
  if (urlContainer && nameContainer && actionsNormal && actionsSave) {
    const isUrlMode = urlContainer.style.display !== 'none';
    
    if (isUrlMode) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É
      urlContainer.style.display = 'none';
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞
      if (site.url) {
        nameContainer.style.display = 'block';
      } else {
        nameContainer.style.display = 'none';
      }
      
      actionsNormal.style.display = 'flex';
      actionsNormal.style.flexDirection = 'row';
      actionsNormal.style.alignItems = 'center';
      actionsSave.style.display = 'none';
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É, –µ—Å–ª–∏ –Ω–µ—Ç —Å—Å—ã–ª–∫–∏
      if (siteHint) {
        siteHint.style.display = !site.url ? 'inline' : 'none';
      }
    } else {
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ URL
      urlContainer.style.display = 'block';
      nameContainer.style.display = 'none';
      actionsNormal.style.display = 'none';
      actionsSave.style.display = 'flex';
      actionsSave.style.flexDirection = 'row';
      actionsSave.style.alignItems = 'center';
      
      // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
      if (siteHint) {
        siteHint.style.display = 'none';
      }
      
      // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ URL
      const urlInput = urlContainer.querySelector('.site-url-input');
      if (urlInput) {
        urlInput.focus();
      }
    }
  }
}

function saveSiteUrl(index) {
  const urlInput = document.getElementById(`site-url-${index}`).querySelector('.site-url-input');
  if (urlInput && urlInput.value.trim()) {
    const url = 'https://' + urlInput.value.trim();
    config.sites[index].url = url;
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –∫ –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É
    toggleSiteUrlField(index);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    const nameContainer = document.getElementById(`site-name-${index}`);
    if (nameContainer) {
      nameContainer.style.display = 'block';
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É, —Ç–∞–∫ –∫–∞–∫ —Å—Å—ã–ª–∫–∞ —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å
    const siteHint = document.getElementById(`site-hint-${index}`);
    if (siteHint) {
      siteHint.style.display = 'none';
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ipcRenderer.send('config-updated', config);
  }
}



function createSiteElement(site, index) {
  const div = document.createElement('div');
  div.className = 'site-item';
  
  const isApp = site.type === 'app';
  const placeholder = isApp ? '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' : '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞';
  const valuePlaceholder = isApp ? '–ü—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é' : 'URL —Å–∞–π—Ç–∞';
  
  div.innerHTML = `
    <div class="site-row">
              <div class="site-left">
          <button class="btn btn-icon site-globe ${isApp ? 'app' : 'site'}" onclick="toggleSiteUrlField(${index})" title="${isApp ? '–í—ã–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' : '–í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç'}">
            ${isApp ? 'üëæ' : 'üåê'}
          </button>
          <div class="site-name-container" id="site-name-${index}" style="display: ${(isApp && site.url) || (!isApp && site.url) ? 'block' : 'none'};">
            <input type="text" placeholder="${isApp ? placeholder : '–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'}" value="${isApp ? site.label : (site.url ? site.label : '')}" 
                   onchange="updateSiteLabel(${index}, this.value)" class="site-name-input">
          </div>
          <span class="site-hint" id="site-hint-${index}" style="display: ${!isApp && !site.url ? 'inline' : 'none'};">
            ‚Üê –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ üåê
          </span>
          <span class="app-hint" id="app-hint-${index}" style="display: ${isApp && !site.url ? 'inline' : 'none'};">
            ‚Üê –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ üëæ —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </span>
          <div class="site-url-container" id="site-url-${index}" style="display: none;">
            <div class="url-input-wrapper">
              <span class="url-prefix">https://</span>
              <input type="text" placeholder="example.com" value="${site.url ? site.url.replace('https://', '') : ''}" 
                     class="site-url-input" onchange="updateSiteUrl(${index}, 'https://' + this.value)">
            </div>
          </div>
        </div>
      <div class="site-right">
        <div class="site-actions-normal" id="site-actions-normal-${index}">
          <button class="btn btn-icon btn-edit" onclick="editSiteName(${index})" title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ">‚úèÔ∏è</button>
          <button class="btn btn-icon btn-remove" onclick="removeSite(${index})" title="–£–¥–∞–ª–∏—Ç—å">‚úï</button>
        </div>
        <div class="site-actions-save" id="site-actions-save-${index}" style="display: none;">
          <button class="btn btn-icon btn-save" onclick="saveSiteUrl(${index})" title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å">‚úÖ</button>
        </div>
      </div>
    </div>
  `;
  return div;
}

function addSite() {
  config.sites.push({
    label: '',
    url: '',
    type: 'site'
  });
  renderSites();
  
  // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  setTimeout(() => {
    const newSite = document.querySelector('#sitesContainer .site-item:last-child');
    if (newSite) {
      newSite.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }, 100);
}

function addApplication() {
  // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const newIndex = config.sites.length;
  config.sites.push({
    label: '–ù–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
    url: '',
    type: 'app'
  });
  renderSites();
  
  // –°—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  setTimeout(() => {
    selectAppForSite(newIndex);
    
    // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
    const newSite = document.querySelector('#sitesContainer .site-item:last-child');
    if (newSite) {
      newSite.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }, 100);
}

function selectAppForSite(index) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ipcRenderer –¥–ª—è –≤—ã–∑–æ–≤–∞ –¥–∏–∞–ª–æ–≥–∞ —á–µ—Ä–µ–∑ main process
  ipcRenderer.send('select-app-for-site', index);
}

// –£–±—Ä–∞–ª —Ñ—É–Ω–∫—Ü–∏—é toggleSiteType - —Ç–µ–ø–µ—Ä—å —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏

function removeSite(index) {
  config.sites.splice(index, 1);
  renderSites();
}

function updateSiteLabel(index, label) {
  config.sites[index].label = label;
}

function updateSiteUrl(index, url) {
  config.sites[index].url = url;
}


// –§—É–Ω–∫—Ü–∏—è updateToggleState —É–¥–∞–ª–µ–Ω–∞ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–æ–∫ - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä
function openLink(url) {
  ipcRenderer.send('open-external-browser', url);
}

function showNotification(message) {
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  const notification = document.createElement('div');
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: #007AFF;
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    z-index: 1000;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    animation: slideIn 0.3s ease-out;
  `;
  notification.textContent = message;
  
  // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
  `;
  document.head.appendChild(style);
  
  document.body.appendChild(notification);
  
  // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    notification.style.animation = 'slideOut 0.3s ease-in';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 300);
  }, 3000);
}


function saveSettings() {
  try {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–∞–ø–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø—É—Ç—è–º–∏ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    config.folders = config.folders.filter(folder => folder.path && folder.path.trim() !== '');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    const configPath = path.join(__dirname, 'config.json');
    fs.writeFileSync(configPath, JSON.stringify(config, null, 2));
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
    ipcRenderer.send('config-updated', config);
    
    showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      window.close();
    }, 2000);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
    showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: ' + error.message);
  }
}


function resetToDefaults() {
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
  require('electron').ipcRenderer.send('show-reset-confirm-dialog');
}


function updateIconChangeState(isAllowed) {
  const iconContent = document.getElementById('iconChangeContent');
  
  if (isAllowed) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–∫–∏
    iconContent.classList.remove('hidden');
    iconContent.classList.add('visible');
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–∫–∏
    iconContent.classList.remove('visible');
    iconContent.classList.add('hidden');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —Å–º–∞–π–ª–∏–∫–æ–≤, –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
    const emojiPopup = document.getElementById('emojiPopup');
    if (emojiPopup && !emojiPopup.classList.contains('hidden')) {
      closeEmojiPopup();
    }
    
    // –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–º–∞–π–ª–∏–∫, –ø—Ä–æ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∏—Ç—å —Ç—É–º–±–ª–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ –∏ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä
  }
}

function updateTimeFormatState(isClockEnabled) {
  const timeFormatContent = document.getElementById('timeFormatContent');
  
  if (isClockEnabled) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    timeFormatContent.classList.remove('hidden');
    timeFormatContent.classList.add('visible');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ AM/PM
    updateAmPmToggleState(config.use24HourFormat === false);
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    timeFormatContent.classList.remove('visible');
    timeFormatContent.classList.add('hidden');
  }
}

function updateAmPmToggleState(is12HourFormat) {
  const amPmToggleContainer = document.getElementById('amPmToggleContainer');
  
  if (is12HourFormat) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—É–º–±–ª–µ—Ä AM/PM —Ç–æ–ª—å–∫–æ –¥–ª—è 12-—á–∞—Å–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
    amPmToggleContainer.style.display = 'block';
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º —Ç—É–º–±–ª–µ—Ä AM/PM –¥–ª—è 24-—á–∞—Å–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
    amPmToggleContainer.style.display = 'none';
  }
}

function selectTimeFormat(is24Hour) {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  config.use24HourFormat = is24Hour;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ (—ç–ª–µ–º–µ–Ω—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ selectTimeFormat)
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ü–∏–π
  updateTimeFormatSelection(is24Hour);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—É–º–±–ª–µ—Ä–∞ AM/PM
  updateAmPmToggleState(!is24Hour);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  ipcRenderer.send('config-updated', config);
}

function updateTimeFormatSelection(is24Hour) {
  const timeFormat12 = document.getElementById('timeFormat12');
  const timeFormat24 = document.getElementById('timeFormat24');
  
  if (timeFormat12 && timeFormat24) {
    if (is24Hour) {
      timeFormat12.classList.remove('selected');
      timeFormat24.classList.add('selected');
    } else {
      timeFormat12.classList.add('selected');
      timeFormat24.classList.remove('selected');
    }
  }
}

function updateTrayText(text) {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  config.trayText = text;
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ç—Ä–µ—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  ipcRenderer.send('update-tray-text', text);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  ipcRenderer.send('config-updated', config);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (text.trim()) {
    showNotification(`–¢–µ–∫—Å—Ç —Ç—Ä–µ—è –æ–±–Ω–æ–≤–ª–µ–Ω: "${text}"`);
  } else {
    showNotification('–¢–µ–∫—Å—Ç —Ç—Ä–µ—è –æ—á–∏—â–µ–Ω');
  }
}

function editTrayText() {
  const textInput = document.getElementById('trayText');
  const editBtn = document.getElementById('edit-text-btn');
  const saveBtn = document.getElementById('save-text-btn');
  
  if (textInput && editBtn && saveBtn) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    editBtn.style.display = 'none';
    saveBtn.style.display = 'inline-flex';
    
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    textInput.focus();
    textInput.select();
  }
}

function saveTrayText() {
  const textInput = document.getElementById('trayText');
  const editBtn = document.getElementById('edit-text-btn');
  const saveBtn = document.getElementById('save-text-btn');
  
  if (textInput && editBtn && saveBtn) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    updateTrayText(textInput.value);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É
    editBtn.style.display = 'inline-flex';
    saveBtn.style.display = 'none';
  }
}

function showHelpTooltip(event, tooltipId) {
  event.stopPropagation();
  
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const allTooltips = document.querySelectorAll('.help-tooltip');
  allTooltips.forEach(tooltip => tooltip.classList.remove('show'));
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
  const tooltip = document.getElementById(tooltipId);
  if (tooltip) {
    tooltip.classList.add('show');
    
    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    const rect = event.target.getBoundingClientRect();
    const tooltipWidth = tooltip.offsetWidth;
    const windowWidth = window.innerWidth;
    
    // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–Ω–æ–ø–∫–∏
    let left = rect.left - (tooltipWidth / 2) + 10;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –ø–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ –≤—ã—Ö–æ–¥–∏–ª–∞ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞
    if (left < 20) left = 20;
    if (left + tooltipWidth > windowWidth - 20) left = windowWidth - tooltipWidth - 20;
    
    tooltip.style.left = left + 'px';
    tooltip.style.top = (rect.bottom + 10) + 'px';
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
function checkForUpdates() {
  const btn = document.getElementById('checkUpdatesBtn');
  const status = document.getElementById('updateStatus');
  const message = status.querySelector('.update-message');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏
  btn.disabled = true;
  btn.innerHTML = '<span class="btn-text">–ü—Ä–æ–≤–µ—Ä—è–µ–º...</span>';
  status.style.display = 'block';
  status.className = 'update-status info';
  message.textContent = '–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...';
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  ipcRenderer.send('check-for-updates');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
ipcRenderer.on('update-check-started', () => {
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞—á–∞—Ç–∞');
});

ipcRenderer.on('update-check-result', (event, result) => {
  const btn = document.getElementById('checkUpdatesBtn');
  const status = document.getElementById('updateStatus');
  const message = status.querySelector('.update-message');
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
  btn.disabled = false;
  btn.innerHTML = '<span class="btn-text">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span>';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  status.style.display = 'block';
  
  if (result.error) {
    status.className = 'update-status error';
    message.textContent = '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏';
  } else if (result.available) {
    status.className = 'update-status success';
    message.textContent = `–î–æ—Å—Ç—É–ø–Ω–∞ –≤–µ—Ä—Å–∏—è ${result.version}. –û–±–Ω–æ–≤–∏—Ç—å?`;
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    btn.innerHTML = '<span class="btn-text">–û–±–Ω–æ–≤–∏—Ç—å</span>';
    btn.onclick = () => {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      ipcRenderer.send('download-update');
      message.textContent = '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...';
      btn.disabled = true;
    };
  } else {
    status.className = 'update-status info';
    message.textContent = '–ù–µ –Ω–∞–π–¥–µ–Ω–æ';
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
ipcRenderer.on('update-download-started', () => {
  console.log('–ù–∞—á–∞—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
ipcRenderer.on('update-download-progress', (event, progress) => {
  const status = document.getElementById('updateStatus');
  const message = status.querySelector('.update-message');
  
  status.style.display = 'block';
  status.className = 'update-status info';
  message.textContent = progress.message;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
ipcRenderer.on('update-downloaded', (event, info) => {
  const btn = document.getElementById('checkUpdatesBtn');
  const status = document.getElementById('updateStatus');
  const message = status.querySelector('.update-message');
  
  status.style.display = 'block';
  status.className = 'update-status success';
  message.textContent = `–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${info.version} –≥–æ—Ç–æ–≤–æ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ`;
  
  btn.disabled = false;
  btn.innerHTML = '<span class="btn-text">–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å</span>';
  btn.onclick = () => {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
    ipcRenderer.send('restart-app');
  };
});
